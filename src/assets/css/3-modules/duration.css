/* -------------------------------------------------
== Duration radiobox selector
-------------------------------------------------- */

.duration {
	--duration-item-gap: .6rem;

	position: relative;
	z-index: 1;
	display: inline-flex;
	padding: var(--duration-item-gap);
	border-radius: var(--border-radius-small);
	gap: var(--duration-item-gap);
	justify-self: center;
	transition: 0.3s transform;
}

.duration:focus-within {
	outline-color: var(--color-hue-primary);
	outline-offset: .3rem;
}

.duration:where([hidden]) {
	transform: scale(0);
	transform-origin: center;
}

.duration__btn {
	position: relative;
	width: 7rem;
	flex-basis: 7rem;
	flex-grow: 1;
	padding: 0.8rem 2rem;
	border: none;
	border-radius: 420rem;
	margin: 0;
	background: none;
	color: var(--color-text-primary-1);
	cursor: pointer;
	font-size: 1.8rem;
	font-weight: 600;
	line-height: 1.22em;
	text-align: center;
	transition: 0.15s all ease-out;
}

.duration__btn:is([aria-pressed="true"]) {
	color: var(--color-text-secondary-2);
}

/* Remove individual outline if focus-within supported */
.duration:focus-within :where(.duration__btn:focus) {
	box-shadow: initial;
}

/* Current iten animation
-------------------------------------------------- */

.duration__btn:last-of-type::after {
	position: absolute;
	z-index: -1;
	top: 50%;
	left: calc(-100% - var(--duration-item-gap));
	width: 100%;
	height: 100%;
	border-radius: 420rem;
	background: var(--color-text-primary-1);
	background-image: linear-gradient(
		180deg,
		hsl(var(--color-hue-primary) 14% 70%) 0%,
		#FFF 100%
	);
	box-shadow:
		0 .2rem .4rem hsl(var(--color-hue-secondary) 29% 10% / 80%),
		inset 0 .1rem 0 hsl(var(--color-hue-primary) 100% 95% / 80%);
	content: "";
	transform-origin: center;
	transition: 0.15s all cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.duration__btn:nth-child(n) ~ .duration__btn::after {
	transform: translateY(calc(-50% + 0.05rem)) scale(0);
}

.duration__btn:nth-child(1):is([aria-pressed="true"]) ~ .duration__btn::after {
	transform: translateY(calc(-50% + 0.05rem)) translateX(calc(-100% - var(--duration-item-gap))) scale(1);
}

.duration__btn:nth-child(2):is([aria-pressed="true"]) ~ .duration__btn::after {
	transform: translateY(calc(-50% + 0.05rem)) translateX(0) scale(1);
}

.duration__btn:nth-child(3):is([aria-pressed="true"])::after {
	transform: translateY(calc(-50% + 0.05rem)) translateX(calc(100% + var(--duration-item-gap))) scale(1);
}
